{"version":3,"sources":["components/Navbar.js","components/Jumbotron.js","components/Card.js","components/Main.js","App.js","index.js"],"names":["Navbar","props","render","className","score","highScore","Component","Jumbotron","style","transform","Card","onClick","handleClick","id","content","Main","increaseScoreOfMain","x","state","setState","testforHighScore","resetGame","i","data","length","clicked","arg","console","log","alert","setTimeout","shuffledIndexes","a","j","Math","floor","random","shuffle","cards","items","push","key","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d822a613.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render = () => {\n    return (\n      <nav className=\"navbar navbar-dark bg-warning text-dark shadow\">\n        <h6>Current Score: {this.props.score}</h6>\n        <h6>High Score: {this.props.highScore}</h6>\n      </nav>\n    );\n  };\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\n\nclass Jumbotron extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render = () => {\n    return (\n      <div className=\"jumbotron jumbotron-fluid shadow\">\n        <div className=\"container\">\n          <h1 className=\"display-4\">Memory Game</h1>\n          <p className=\"lead\">\n            Click as many fruits as you can without clicking the same one twice.\n          </p>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default Jumbotron;\n","import React, { Component } from \"react\";\n\nvar style = { transform: \"scale(2)\" };\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render = () => {\n    return (\n      <div className=\"col-4\">\n        <div\n          className=\"card p-3 mb-3 text-center shadow\"\n          onClick={() => this.props.handleClick(this.props.id)}\n        >\n          <div style={style}>{this.props.content}</div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport Navbar from \"./Navbar\";\nimport Jumbotron from \"./Jumbotron\";\nimport Card from \"./Card\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      score: 0,\n      highScore: 0,\n      data: [\n        {\n          clicked: false,\n          id: 0,\n          content: \"🍒\"\n        },\n        {\n          clicked: false,\n          id: 1,\n          content: \"🍏\"\n        },\n        {\n          clicked: false,\n          id: 2,\n          content: \"🍎\"\n        },\n        {\n          clicked: false,\n          id: 3,\n          content: \"🍊\"\n        },\n        {\n          clicked: false,\n          id: 4,\n          content: \"🍋\"\n        },\n        {\n          clicked: false,\n          id: 5,\n          content: \"🍌\"\n        },\n        {\n          clicked: false,\n          id: 6,\n          content: \"🍉\"\n        },\n        {\n          clicked: false,\n          id: 7,\n          content: \"🍇\"\n        },\n        {\n          clicked: false,\n          id: 8,\n          content: \"🍓\"\n        }\n      ]\n    };\n  }\n\n  increaseScoreOfMain = () => {\n    let x = this.state.score;\n    this.setState({ score: x + 1 });\n  };\n\n  testforHighScore = () => {\n    let x = this.state.score;\n    let y = this.state.highScore;\n    if (x > y) {\n      this.setState({ highScore: x });\n    }\n  };\n\n  resetGame = () => {\n    this.setState({ score: 0 });\n    for (var i = 0; i < this.state.data.length; i++) {\n      this.state.data[i].clicked = false; //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    }\n  };\n\n  handleClick = arg => {\n    console.log(arg);\n    if (this.state.data[arg].clicked) {\n      alert(\"You failed!\");\n      this.resetGame();\n    } else {\n      this.state.data[arg].clicked = true; //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n      this.increaseScoreOfMain();\n      //Must not attempt to set state simultaneously\n      setTimeout(() => {\n        this.testforHighScore();\n      }, 10);\n    }\n  };\n\n  render = () => {\n\n    //Randomize indexes, code pulled from https://stackoverflow.com/questions/6274339/how-can-i-shuffle-an-array\n    var indexes = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\n    function shuffle(a) {\n      for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n      }\n      return a;\n    }\n    let shuffledIndexes = shuffle(indexes);\n    console.log(shuffledIndexes);\n\n    //Create the shuffled array of card components\n    let cards = [];\n    for (var i = 0; i < this.state.data.length; i++) {\n      let items = this.state.data\n      cards.push(\n        <Card\n          content={items[shuffledIndexes[i]].content}\n          id={items[shuffledIndexes[i]].id}\n          key={items[shuffledIndexes[i]].id}\n          handleClick={this.handleClick}\n        />\n      );\n    }\n\n    //Place the following on the screen\n    return (\n      <div>\n        <Navbar score={this.state.score} highScore={this.state.highScore} />\n        <br></br>\n        <Jumbotron />\n        <div className=\"container pt-3\">\n          <div className=\"row\">{cards}</div>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport Main from \"./components/Main\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render = () => {\n    return <Main />;\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}